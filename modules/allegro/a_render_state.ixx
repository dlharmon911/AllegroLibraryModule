export module allegro:render_state;

import <allegro5/render_state.h>;
import :base;

namespace ALLEGRO
{
    export using RENDER_STATE = ALLEGRO_RENDER_STATE;
    export using RENDER_FUNCTION = ALLEGRO_RENDER_FUNCTION;
    export using WRITE_MASK_FLAGS = ALLEGRO_WRITE_MASK_FLAGS;

    export enum
    {
        RENDER_STATE_ALPHA_TEST = ALLEGRO_ALPHA_TEST,
        RENDER_STATE_WRITE_MASK = ALLEGRO_WRITE_MASK,
        RENDER_STATE_DEPTH_TEST = ALLEGRO_DEPTH_TEST,
        RENDER_STATE_DEPTH_FUNCTION = ALLEGRO_DEPTH_FUNCTION,
        RENDER_STATE_ALPHA_FUNCTION = ALLEGRO_ALPHA_FUNCTION,
        RENDER_STATE_ALPHA_TEST_VALUE = ALLEGRO_ALPHA_TEST_VALUE
    };

    export enum
    {
        RENDER_FUNCTION_NEVER = ALLEGRO_RENDER_NEVER,
        RENDER_FUNCTION_ALWAYS = ALLEGRO_RENDER_ALWAYS,
        RENDER_FUNCTION_LESS = ALLEGRO_RENDER_LESS,
        RENDER_FUNCTION_EQUAL = ALLEGRO_RENDER_EQUAL,
        RENDER_FUNCTION_LESS_EQUAL = ALLEGRO_RENDER_LESS_EQUAL,
        RENDER_FUNCTION_GREATER = ALLEGRO_RENDER_GREATER,
        RENDER_FUNCTION_NOT_EQUAL = ALLEGRO_RENDER_NOT_EQUAL,
        RENDER_FUNCTION_GREATER_EQUAL = ALLEGRO_RENDER_GREATER_EQUAL
    };

    export enum
    {
        RENDER_MASK_RED = ALLEGRO_MASK_RED,
        RENDER_MASK_GREEN = ALLEGRO_MASK_GREEN,
        RENDER_MASK_BLUE = ALLEGRO_MASK_BLUE,
        RENDER_MASK_ALPHA = ALLEGRO_MASK_ALPHA,
        RENDER_MASK_DEPTH = ALLEGRO_MASK_DEPTH,
        RENDER_MASK_RGB = ALLEGRO_MASK_RGB,
        RENDER_MASK_RGBA = ALLEGRO_MASK_RGBA
    };
}

namespace al
{
    export inline auto set_render_state(const ALLEGRO::RENDER_STATE& state, int32_t value) -> void
    {
        al_set_render_state(state, value);
    }
}


